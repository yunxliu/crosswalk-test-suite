<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="./testcase.xsl"?>
<test_definition>
  <suite category="Web_Usecase_Android" launcher="xwalk" name="wrt-usecase-android-tests">
    <set name="usecase">
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_VideoFormat_WebM" purpose="Validate if Crosswalk Browser is able to play  online webm video">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network ;
            2.Package a web app,it contains below web links: http://media.w3.org/2010/05/sintel/
            3.Install this web app;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_VideoFormat_WebM.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_VideoFormat_MP4" purpose="Validate if Crosswalk Browser is able to play  online mp4 video">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network ;
            2.Package a web app,it contains below web links: http://media.w3.org/2010/05/sintel/
            3.Install this web app;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_VideoFormat_MP4.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Video_FullScreen" purpose="Validate if Crosswalk support video full-screen play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk packer tool is download: crosswalk/
            2.Packaged app only contain URL:"http://www.w3.org/2010/05/video/mediaevents.html"
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Video_FullScreen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Video_HWAccelerate" purpose="Validate if Crosswalk support HW accelerated HTML5 video">
        <description>
          <pre_condition>
            1.Make sure Crosswalk packer tool is download: crosswalk/
            2.Packaged app only contain URL:"http://www.w3.org/2010/05/video/mediaevents.html"
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Video_HWAccelerate.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_HttpAuth_Success" purpose="Validate the http authentication if input correct username/password (via http://httpbin.org/basic-auth/user/passwd)">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure nerwork can be used
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_HttpAuth_Success.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_App" purpose="Validate the scheme 'app://' is implemented in Crosswalk">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_App.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Content" purpose="Validate the scheme 'content://' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1. Make sure Crosswalk binary is installed;
            2. Make sure there at least 1 image in the device sdcard.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Content.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Geo_1" purpose="Validate the scheme 'geo:' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure web_feature_scheme_tests.apk is installed;
            3.Make sure at least one Map Application is installed;
            4.Make sure network can be used.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Geo_1.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Mailto_1" purpose="Validate the scheme 'mailto:' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure web_feature_scheme_tests.apk is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Mailto_1.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Market" purpose="Validate the scheme 'market:' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Market.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Sms" purpose="Validate the scheme 'sms:' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Sms.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_Scheme_Tel" purpose="Validate the scheme 'tel:' is implemented in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Scheme_Tel.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk_Cookie" execution_type="manual" id="Crosswalk_Cookie_Add_Cookies" purpose="Validate the cookie name and value can be add">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched;
            2.Package a web app,it contains web link: http://www.html-kit.com/tools/cookietester/;
            3.Install this web app;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Cookie_Add_Cookies.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk_Cookie" execution_type="manual" id="Crosswalk_Cookie_Remove_Cookies" purpose="Validate the cookie name and value can be delete">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched;
            2.Package a web app,it contains web link: http://www.html-kit.com/tools/cookietester/;
            3.Install this web app;
            4.There are some cookies exist.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Cookie_Remove_Cookies.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web Features" execution_type="manual" id="Crosswalk_WebApp_HTML5_Notification" purpose="Validate if enable the feature of HTML5 Notification in Crosswalk">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_HTML5_Notification.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web App Management" execution_type="manual" id="Crosswalk_WebApps_Volume" purpose="Validate if web app sound volume work fine on Crosswalk">
        <description>
          <pre_condition>
            1.Make sure a webapp with sound is installed on Android OS.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApps_Volume.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Web App Management" execution_type="manual" id="Crosswalk_Rotate_WebApp" purpose="Validate Crosswalk support rotate between portrait orientation screen and landscape orientation screen">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched.
            2.Package a web app,it contains below web links:Open website link: http://www.baidu.com
            3.Install this web app.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Rotate_WebApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Security" execution_type="manual" id="Crosswalk_WebApp_CSP_Connect_Src_Value" purpose="Validate if enable csp directives: connect-src in Crosswalk">
        <description>
          <pre_condition>
            1. Make sure Crosswalk binary is installed
            2. Make sure the device connected to network
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_CSP_Connect_Src_Value.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Security" execution_type="manual" id="Crosswalk_Permission_Field_Contacts" purpose="Validate if enable the 'Contacts' permission">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Permission_Field_Contacts.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Security" execution_type="manual" id="Crosswalk_WebApp_Certificate_Trusted" purpose="Validate if support accept the untrused security certificate website">
        <description>
          <pre_condition>
            1. Make sure Crosswalk binary is installed on device;
            2. Make sure the device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Certificate_Trusted.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Runtime Library" execution_type="manual" id="Crosswalk_Launcher_Icon" purpose="Validate if Crosswalk icon display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Launcher_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Runtime Library" execution_type="manual" id="Crosswalk_Launcher_Check_Installer_Name" purpose="Validate the installer name is about with Crosswalk">
        <description>
          <pre_condition>
            1.Make sure the Crosswalk runtime 'XwalkRuntimeLib.apk'  already exists in the Android OS
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Launcher_Check_Installer_Name.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Runtime Library" execution_type="manual" id="SplashScreen_LaunchScreen_Png" purpose="Validate the Crosswalk enable the launch screen mechanism of png image">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/SplashScreen_LaunchScreen_Png.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_Blend" purpose="Validate the Manifest name of web app is manifest_name_blend_tests">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
            2.Download package resources from otcqa to local
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Name_Blend.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_Jpg" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Icon_Jpg.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Icon_One" purpose="Validate the Manifest icon of web app is display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Icon_One.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Version_IdentifyingFour" purpose="Validate the version of web app is 1.0.10.4">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
            2.Download package resources from otcqa to local
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Version_IdentifyingFour.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_App_Launch" purpose="Validate the app entry if specified in launch">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device.
            2.Download package resources from otcqa to local
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_App_Launch.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Fullscreen_True" purpose="Validate if enable launching application in fullscreen mode">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Fullscreen_True.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Minimal_Manifest" purpose="Validate if package app successfully use minimal manifest file">
        <description>
          <pre_condition>
            Make sure Crosswalk binary is installed on device.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Minimal_Manifest.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Fullscreen_Immersive_Top" purpose="Validate if Crosswalk enable the fullscreen immersive mode by swiping down from top">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
            2.Make sure device OS is Android 4.4 or above.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Fullscreen_Immersive_Top.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Field_Combination" purpose="Validate if app can packing ,install and launch">
        <description>
          <pre_condition>
            1.Make sure CrossWalk binary is installed;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Field_Combination.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_Name_Number" purpose="Validate the Manifest name of web app is number">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Name_Number.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Multiple_Tab_SamePages" purpose="Validate Crosswalk enable multiple instances for same pages">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Make sure device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Multiple_Tab_SamePages.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Multiple_Tab_DiffPages" purpose="Validate Crosswalk enable multiple instances for different pages">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Make sure device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Multiple_Tab_DiffPages.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Runtime Core" execution_type="manual" id="Crosswalk_Manifest_XwalkHosts_Value" purpose="Validate Crosswalk enable the xwalk_hosts field in manifest">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed on device;
            2.Make sure device connected to network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_XwalkHosts_Value.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Version" purpose="Validate the Crosswalk is able to get the version info of Packaging Tool">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Version.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_OnWindows_PackageApp" purpose="Validate the Crosswalk Packaging Tool can package app on Windows host">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
            3. Make sure "web_scroll_indicators_tests" on windows.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_OnWindows_PackageApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_OnWindows_Manifest" purpose="Validate the Crosswalk Packaging Tool can package app with Manifest on Windows host">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
            3.Make sure "web_scroll_indicators_tests" on windows.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_OnWindows_Manifest.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_OnWindows_HostApp" purpose="Validate the Crosswalk Packaging Tool can package app with url on Windows host">
        <description>
          <pre_condition>
            1.Make sure enable Python2.7 on Windows host;
            2.Make sure the Crosswalk Packaging Tool on Windows;
            3.Make sure the url of "web_scroll_indicators_tests" is correct.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_OnWindows_HostApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_ShareMode_PackageApp" purpose="Validate the Crosswalk support share mode of package app">
        <description>
          <pre_condition>
            1.Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_ShareMode_PackageApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_ShareMode_Manifest" purpose="Validate the Crosswalk support share mode of manifest inputs">
        <description>
          <pre_condition>
            1.Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_ShareMode_Manifest.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_ShareMode_HostApp" purpose="Validate the Crosswalk support share mode of host app">
        <description>
          <pre_condition>
            1.Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_ShareMode_HostApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Mode_Embeded" purpose="Validate the Crosswalk support embedded mode of package app">
        <description>
          <pre_condition>
            Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Mode_Embeded.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Mode_Shared" purpose="Validate the Crosswalk support shared mode of package app">
        <description>
          <pre_condition>
            Make sure Crosswalk lib installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Mode_Shared.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Fullscreen" purpose="Validate if the Packaging Tool enable the fullscreen option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Fullscreen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Help" purpose="Validate if the Packaging Tool enable the help option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Help.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_XPK" purpose="Validate if the Packaging Tool enable the xpk option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_XPK.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Arch_Default" purpose="Validate if the Packaging Tool enable the default arch option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Arch_Default.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Arch_X86" purpose="Validate if the Packaging Tool enable the 'x86' arch option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Arch_X86.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Arch_ARM" purpose="Validate if the Packaging Tool enable the 'arm' arch option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Arch_ARM.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Description" purpose="Validate if the Packaging Tool enable the description option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Description.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Icon_Default" purpose="Validate if the Packaging Tool set the default icon for webapp">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Icon_Default.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Icon_Png" purpose="Validate if the Packaging Tool enable the 'png' icon option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Icon_Png.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Icon_TwoPic" purpose="Validate if the Packaging Tool enable two icon options">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Icon_TwoPic.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Orientation_Landscape" purpose="Validate if the Packaging Tool enable the 'landscape' orientation option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Orientation_Landscape.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppUrl" purpose="Validate if the Packaging Tool enable the app-url option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed;
            4.Make sure connected to the network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppUrl.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppVersion" purpose="Validate if the Packaging Tool enable the app-version option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Remote_Debugging_Default" purpose="Validate Crosswalk could debug by remote host when the web app is packaged with remote debugging by default">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Remote_Debugging_Default.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Remote_Debugging_Not_Default" purpose="Validate Crosswalk could debug by remote host when the web app is packaged without remote debugging by default">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Remote_Debugging_Not_Default.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Manifest_Permission_FieldOne" purpose="Validate if the Packaging Tool work well for the permission in manifest">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Manifest_Permission_FieldOne.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppPath" purpose="Validate if the Packaging Tool enable the app-local-path option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppPath.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppPath_Name" purpose="Validate if the Packaging Tool enable set name option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppPath_Name.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppPath_Package" purpose="Validate if the Packaging Tool enable set package option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppPath_Package.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Compressor_Minify" purpose="Validate if the Packaging Tool manify js/css files with compressor option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Compressor_Minify.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Compressor_MinifyCss" purpose="Validate if the Packaging Tool manify css files with compressor option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Compressor_MinifyCss.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppVersion_ARM" purpose="Validate if the Packaging Tool works well with the 'arm' arch and app-version options">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion_ARM.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppVersion_X86" purpose="Validate if the Packaging Tool works well with the 'x86' arch and app-version options">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion_X86.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_AppVersion_DiffUpdate" purpose="Validate if Crosswalk enable update webapp with the different app-version">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool;
            3.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_AppVersion_DiffUpdate.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_TargetDir_AbsolutePath" purpose="Validate if the Packaging Tool works well with absolute path in target-dir option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_TargetDir_AbsolutePath.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Verbose" purpose="Validate if the Packaging Tool works well with verbose option">
        <description>
          <pre_condition>
            1.Make sure packer tool download;
            2.Make sure got the Crosswalk Packaging Tool.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Verbose.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_WebGL_API_Disable" purpose="Validate if Crosswalk support disable the WebGL API">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebGL_API_Disable.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_Keep_Screen_On" purpose="Validate if the Packaging Tool works well with the keep-screen-on option">
        <description>
          <pre_condition>
            Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_Keep_Screen_On.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_PythonVersion_2.7.6" purpose="Validate if the Packaging Tool support Python 2.7.6">
        <description>
          <pre_condition>
            1.Make sure the version of Python is Python 2.7.6
            2.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_PythonVersion_2.7.6.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Packer Tool" execution_type="manual" id="Crosswalk_Packer_Tool_PythonVersion_3.4" purpose="Validate if the Packaging Tool support Python 3.4">
        <description>
          <pre_condition>
            1.Make sure the version of Python is Python 3.4
            2.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Packer_Tool_PythonVersion_3.4.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_App_Icon" purpose="Validate if web app icon display normally">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_App_Icon.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_App_Icon_Launcher" purpose="Validate if Crosswalk support that web app could be launched from app launcher successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_App_Icon_Launcher.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_WebApp_Install" purpose="Validate if Crosswalk support web apps could be installed successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_WebApp_Uninstall" purpose="Validate if Crosswalk support web apps could be uninstalled successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_MultipleWebApps_Install" purpose="Validate if Crosswalk support multiple web apps could be installed successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure multiple webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_MultipleWebApps_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_WebApp_Launch" purpose="Validate Crosswalk support that web app could be launched successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Launch.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_WebApp_Close" purpose="Validate Crosswalk support that web app could be closed successfully">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched
            2.Make sure have one web app is running
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Close.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_Eclipse_Create_WebApp" purpose="Validate if enable create Crosswalk project in Eclipse">
        <description>
          <pre_condition>
            1.Make sure set up the envrionment as wiki: https://github.com/crosswalk-project/crosswalk-developer-tools-eclipse-plugin
            2.Make sure configured the Android SDk and Crosswalk plugin into Eclipse.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Eclipse_Create_WebApp.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Package Management on Android" execution_type="manual" id="Crosswalk_WebApp_docx_openfile" purpose="Validate if enable open a docx file with third part app">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched.
            2.Make sure tool which support the format of file is installed on the test platform.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_docx_openfile.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_Lock_And_Unlock_Screen" purpose="Validate Crosswalk suppor lock and unlock screen when running Web Apps">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched;
            2.Make sure there some webapps are available.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Lock_And_Unlock_Screen.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Integration_Termined_TaskManager" purpose="Validate if  Web App could be termined in task manager">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Integration_Termined_TaskManager.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Integration_Termined_BackKey" purpose="Validate if  Web App could be termined by back key">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Integration_Termined_BackKey.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Integration_Switch" purpose="Validate if Crosswalk support Web Apps could be switch successfully">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Integration_Switch.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_HW_KEY" purpose="Validate if the HW Key work well in Crosswalk App">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure has some multimedia Web Apps
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_HW_KEY.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Touch_Gesture_Scroll" purpose="Validate if Crosswalk support scroll gesture on Web Apps">
        <description>
          <pre_condition>
            1. Make sure Crosswalk application is launched and the device connected to network
            *Package a Web App,it contains below web links:
            Open website link: http://www.hao123.com
            *Install this Web App
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Touch_Gesture_Scroll.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Touch_Gesture_Swipe" purpose="Validate if Crosswalk support swipe gesture on Web Apps">
        <description>
          <pre_condition>
            1. Make sure Crosswalk application is launched and the device connected to network
            2. Package a Web App,it contains below web links:Open website link: http://www.hao123.com
            3. Install this Web App
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Touch_Gesture_Swipe.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Touch_Gesture_Click" purpose="Validate if Crosswalk support click gesture on Web Apps">
        <description>
          <pre_condition>
            1. Make sure Crosswalk application is launched and the device connected to network
            2. Package a Web App,it contains below web links:Open website link: http://www.hao123.com
            3. Install this Web App
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Touch_Gesture_Click.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_Orientation" purpose="Validate Crosswalk support rotate between portrait orientation screen and landscape orientation screen">
        <description>
          <pre_condition>
            1. Make sure Crosswalk is installed
            2. Make sure there some webapps are available
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_Orientation.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_WebApp_BackKey_Back" purpose="Validate if Crosswalk Browser support access hotwebsite webpage">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is installed and the device connected to network;
            2.Package a web app,it contains below web links:Open website link: http://www.hao123.com ;
            3.Install this web app
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_WebApp_BackKey_Back.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_CopyAndPaste_Selected_Copy" purpose="Validate if could copy Selected_Copy">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure at least one audio app is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_CopyAndPaste_Selected_Copy.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Integration with Android System" execution_type="manual" id="Crosswalk_CopyAndPaste_Selected_Cut" purpose="Validate if could cut text">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure at least one audio app is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_CopyAndPaste_Selected_Cut.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Runtime Library" execution_type="manual" id="Crosswalk_UseChromeBlacklist_WebGLSupport_ARM" purpose="Validate if display normal when browser support WebGL on ARM">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure at least one webapp is installed.
            3.Use the ARM device which WebGL is enable in it
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_UseChromeBlacklist_WebGLSupport_ARM.html </test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Google Play" execution_type="manual" id="Crosswalk_Google_Play_AppPath" purpose="Validate Crosswalk webapp packaged with app-path option can be upload into Google Play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed;
            2.Make sure device connected to Network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Google_Play_AppPath.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Google Play" execution_type="manual" id="Crosswalk_Google_Play_ARM" purpose="Validate Crosswalk webapp packaged with 'arm' arch option can be upload into Google Play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed;
            2.Make sure device connected to Network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Google_Play_ARM.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Google Play" execution_type="manual" id="Crosswalk_Google_Play_X86" purpose="Validate Crosswalk webapp packaged with 'x86' arch option can be upload into Google Play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed;
            2.Make sure device connected to Network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Google_Play_X86.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Google Play" execution_type="manual" id="Crosswalk_Google_Play_Upgrade" purpose="Validate Crosswalk webapp can be upgrade in Google Play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed;
            2.Make sure device connected to Network.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Google_Play_Upgrade.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Crosswalk Google Play" execution_type="manual" id="Crosswalk_Google_Play_Multiple" purpose="Validate Crosswalk webapp for arm,x86 can be uploaded into the same application in Google Play">
        <description>
          <pre_condition>
            1.Make sure Crosswalk is installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Google_Play_Multiple.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_Extension_Permissions_Contacts_Write" purpose="Validate the Crosswalk enable to extend 'READ_CONTACTS', 'WRITE_CONTACTS' permisson on Android">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure package the "extension_permission_contacts_tests.apk" with argument: "--extensions={EXTENSION}";
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Extension_Permissions_Contacts_Write.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_Extension_Permissions_Contacts_Read" purpose="Validate the Crosswalk enable to extend 'READ_CONTACTS', 'WRITE_CONTACTS' permisson on Android">
        <description>
          <pre_condition>
            1.Make sure Crosswalk binary is installed;
            2.Make sure package the "extension_permission_contacts_tests.apk" with argument: "--extensions={EXTENSION}";
            3.Extension permission contacts web app has installed;
            4.Have available contacts;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_Extension_Permissions_Contacts_Read.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_EmbeddedMode_Extension_Install" purpose="Validate if Crosswalk support the external extension install in the embedded mode">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
            2.Make sure the extension are available
 and  package the extension with argument like: python make_apk.py --name=Example --package=org.xwalk.example --app-root=test_data/entry --app-local-path=contactextension.html --extensions=test_data//extensions/contactextension/ --mode=embedded
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_Install.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_EmbeddedMode_Extension_Uninstall" purpose="Validate if Crosswalk support the external extension uninstall in the embedded mode">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
            2.Make sure the extension are installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_Uninstall.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_EmbeddedMode_Extension_WriteContact" purpose="Validate if Crosswalk support the external extension in the embedded mode">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_WriteContact.html</test_script_entry>
        </description>
      </testcase>
      <testcase component="Extension System" execution_type="manual" id="Crosswalk_EmbeddedMode_Extension_XwalkRuntimeLibUninstall" purpose="Validate if Crosswalk support the external extension in the embedded mode with runtimelib uninstall">
        <description>
          <pre_condition>
            1.Make sure Crosswalk application is launched and the device connected to network;
            2.Make sure the extension are installed.
          </pre_condition>
          <test_script_entry>/opt/wrt-usecase-android-tests/usecase/Crosswalk_EmbeddedMode_Extension_XwalkRuntimeLibUninstall.html</test_script_entry>
        </description>
      </testcase>
    </set>
  </suite>
</test_definition>
